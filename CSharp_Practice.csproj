<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
	  
    <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.MultiThreadedEx</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Collections.Generic.HashSet.HashSetCreation</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Collections.Generic.HashSet.HashSetPOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.OOPs.ClassAndObjects.PartialClass.PartialClassWithInterface.Driver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Extension_Method.Driver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Extension_Method.StringExtension</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.BoxingUnboxing.BoxingUnboxingPOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.ThreadNameProperty</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.OOPs.Inheritance.Single_Inheritance.B</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.LCMOfTwoNumbers</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.OOPs.Method_Overriding.MethodOverridingDriver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.OOPs.Method_Overriding.Method_Hiding.Child</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.ToPrintRandomNumbersUsingforeach</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.MultiThreading.EvenAndOddNumsUsingMultiThreading</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.Strings.StringPalindrome</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Interface.Default_Method.GooglePay</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Interface.Default_Method.PopClub</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Interface.Default_Method.Driver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Interface.Diamond_Problem.Diamond_Problem_New.Driver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.Dictionary.StringScramble</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.Single_Thread.ImplementingSleepInSingleThread</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.MultiThreadedEx</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.MultipleForegroundAndOneBackgroundThread</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.BackgroundAndForegroundThreadEx</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.YieldMethodPOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.ThreadPropertiesAndMethods</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.ThreadAbort</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.ThreadStatePOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.ThreadInstanceUsingAnonymousMethod</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.ThreadInstanceUsingLambdaExpression</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.ThreadFunctionUsingParameter</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Type_Safe_ThreadFunction.Driver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Type_Safe_ThreadFunction.Reference_Type.ParameterizedThreadStartEx</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.Strings.CountOccurrencesOfEachCharacterInString</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.SumOfDigits</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.Arrays.FindMostFrequentArrayElement</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.OOPs.Abstraction.SimpleExample.Driver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Interface.Diamond_Problem.Diamond_Problem_New.Driver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.RetrieveData_From_ThreadFunction.Driver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.JoinMethodPOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.JoinWithTimeSpanPOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.ExampleWithoutThreadSynchronization</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Real_Time_Example.WithoutSynchronization.Driver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Real_Time_Example.WithSynchronization.Driver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.OOPs.ClassAndObjects.PartialClass.PartialClassDriver</StartupObject>-->
	   <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Monitors.MonitorClassEnterAndExitMethodPOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Monitors.MonitorClassOverloadedEnterMethodPOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Monitors.MonitorClassTryEnterPOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Monitors.MonitorClassTryEnterWithJoinMethod</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Extension_Method.Driver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.WithoutSynchronization.WithoutLockOnSharedResourcesEx</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.Strings.CheckForValidIPAddress</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.Arrays.SplitArrayIntoTwoEqualSumSubarrays</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Destructors.DestructorDriverClass</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Using_Semaphore.SemaphorePOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Using_Mutex.MutexClassOpenExistingMethodPOC</StartupObject>-->
	  <!--startupobject>CSharp_Practice.Threads.MultiThreading.Synchronization.Using_Mutex.CheckMutexState</startupobject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Using_Mutex.ParametrizedWaitOnePOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.Stack.ValidParenthesis</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Using_Mutex.MutexClassPOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.Lists.ValidParenthesisGeneration</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Using_Mutex.MutexClassOpenExistingMethodPOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Using_Semaphore.SemaphorePOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Using_SemaphoreSlim.SemaphoreSlimPOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Using_SemaphoreSlim.SemaphoreSlimPOC</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Thread_Pool.ThreadPoolExample</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Performance_Testing.PerfTestingUsingAndWithoutUsingThreadPool</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Performance_Testing.EvenOddSum</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Thread_Pool.ThreadPoolExample</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.Single_Thread.Performance_Testing.EvenOddSum</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Deadlock.Avoiding_Deadlock.Using_Lock.Driver</StartupObject>-->
	    <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Deadlock.Avoiding_Deadlock.Using_Monitor.Driver</StartupObject>-->
	   <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Deadlock.Example_Deadlock.Driver</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.Threads.MultiThreading.Synchronization.Using_Semaphore.SemaphoreOpenExistingPOC</StartupObject>-->
	  
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.Arrays.FindTheSumOfArrayElements</StartupObject>-->
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.Strings.ReverseAllWords</StartupObject>-->
	  
	  <!--<StartupObject>CSharp_Practice.CodingQuestions.Strings.WordFrequency</StartupObject>-->
	  <StartupObject>CSharp_Practice.CodingQuestions.Strings.FindVowelsInString</StartupObject>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="CodingQuestions\HashSet\**" />
    <EmbeddedResource Remove="CodingQuestions\HashSet\**" />
    <None Remove="CodingQuestions\HashSet\**" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ExceptionHandlings\" />
    <Folder Include="ArrayLists\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>

</Project>
